package lang_basics

import "fmt"

func cons_print() {
	n := 5
	fmt.Println("n:", n) // n: 6

	fmt.Print("... n:", n) // ... n:6

	/*
		%t: для вывода значений типа boolean (true или false)

		%b: для вывода целых чисел в двоичной системе

		%b: для вывода чисел с плавающей точкой без десятичной точки с показателем степени двойки

		%c: для вывода символов, представленных числовым кодом

		%d: для вывода целых чисел в десятичной системе

		%o: для вывода целых чисел в восьмеричной системе

		%O: для вывода целых чисел в восьмеричной системе, которые предваряются префиксом "O"

		%q: для вывода символов в одинарных кавычках

		%x: для вывода целых чисел, чисел с плавающей точкой и строк в шестнадцатиричной системе, буквенные символы числа имеют нижний регистр a-f

		%X: для вывода целых чисел, чисел с плавающей точкой и строк в шестнадцатиричной системе, буквенные символы числа имеют верхний регистр A-F

		%U: для вывода символов в формате кодов Unicode, например, U+1234

		%e: для вывода чисел с плавающей точкой в экспоненциальном представлении, например, -1.234456e+78

		%E: для вывода чисел с плавающей точкой в экспоненциальном представлении, например, -1.234456E+78

		%f: для вывода чисел с плавающей точкой, например, 123.456

		%F: то же самое, что и %f

		%g: для длинных чисел с плаващей точкой используется %e, для других - %f

		%G: для длинных чисел с плаващей точкой используется %E, для других - %F

		%s: для вывода строки

		%p: для вывода значения указателя - адреса в шестнадцатеричном представлении

		%v: универсальный спецификатор, который выводит значение в формате по умолчанию: для типа boolean аналогичен %t, для целочисленных типов - %d, для чисел с плавающей точкой - %g, для строк - %s.

		%#v: для вывода значения в формает синтаксиса Go

		%T: для вывода типа данных

		%%: для вывода символа процентов
	*/
	var floatval = 3456.8789

	fmt.Printf("%%f: %f \n", floatval) // %f: 3456.878900

	fmt.Printf("%%3f: %3f \n", floatval) // %3f: 3456.878900

	fmt.Printf("%%.2f: %.2f \n", floatval) //%.2f: 3456.88

	fmt.Printf("%%3.2f: %3.2f \n", floatval) //%3.2f: 3456.88

	fmt.Printf("%%3.f: %3.f \n", floatval) //%3.f: 3457
}
